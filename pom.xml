<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.aug</groupId>
  <artifactId>jmvc</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>jmvc Maven Webapp</name>
  <url>http://maven.apache.org</url>
  https://github.com/allegro/grunt-maven-plugin
  https://mrhanlon.com/posts/using-npm-bower-and-grunt-with-maven/
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <dependencies>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>4.1.0.RELEASE</version>
    </dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>4.1.0.RELEASE</version>
	</dependency>
  
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>jmvc</finalName>
    <plugins>
		 <plugin>
		    <groupId>pl.allegro</groupId>
		    <artifactId>grunt-maven-plugin</artifactId>
		    <version>1.5.9</version>
		    <configuration>
		        <!-- relative to src/main/webapp/, default: static -->
		        <jsSourceDirectory>src/main/frontend</jsSourceDirectory>
		
		        <!-- example options usage to get verbose output in logs -->
		        <gruntOptions>
		            <gruntOption>--verbose</gruntOption>
		        </gruntOptions>
		
		        <!-- example npm install env variable -->
		        <npmEnvironmentVar>
		            <PHANTOMJS_CDNURL>http://cnpmjs.org/downloads</PHANTOMJS_CDNURL>
		        </npmEnvironmentVar>
		
		        <!-- example options usage to filter variables in given resource -->
		        <filteredResources>
		            <filteredResource>maven-properties.json</filteredResource>
		        </filteredResources>
		
		    </configuration>
		    <executions>
		        <execution>
		            <goals>
		                <goal>create-resources</goal>
		                <goal>npm</goal>
		                <!-- or npm-offline if npm failure is not an option -->
		                <goal>bower</goal>
		                <goal>grunt</goal>
		            </goals>
		        </execution>
		    </executions>
		</plugin>
    </plugins>
  </build>
</project>
